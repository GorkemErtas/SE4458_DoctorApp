{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gorke\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\doctorappointmentsystem\\\\src\\\\pages\\\\DoctorReview.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorReview = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState('');\n  const [submitted, setSubmitted] = useState(false);\n  const [doctorName, setDoctorName] = useState('');\n  useEffect(() => {\n    // Doktorun ismini çekmek için API çağrısı\n    const fetchDoctorName = async () => {\n      try {\n        const response = await fetch(`http://localhost:5001/api/doctors/appointment/${id}`);\n        const data = await response.json();\n        setDoctorName(data.fullname);\n      } catch (error) {\n        console.error('Error fetching doctor details:', error);\n      }\n    };\n    fetchDoctorName();\n  }, [id]);\n  const handleRating = value => {\n    setRating(value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!id.match(/^[0-9a-fA-F]{24}$/)) {\n      alert(\"Invalid doctor ID format.\");\n      return;\n    }\n    const reviewData = {\n      id,\n      doctorName,\n      rating,\n      comment\n    };\n    try {\n      const response = await fetch('http://localhost:5001/api/reviews', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(reviewData)\n      });\n      if (response.ok) {\n        setSubmitted(true);\n        setTimeout(() => navigate('/'), 2000);\n      } else {\n        alert('Failed to submit review. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error submitting review:', error);\n      alert('An error occurred. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"review-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Rate Your Experience with \", doctorName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), submitted ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Thank you for your review! Redirecting to homepage...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rating\",\n        children: [1, 2, 3, 4, 5].map(star => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `star ${star <= rating ? 'filled' : ''}`,\n          onClick: () => handleRating(star),\n          children: \"\\u2605\"\n        }, star, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Leave a comment...\",\n        value: comment,\n        onChange: e => setComment(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(DoctorReview, \"H/4W4s+aLRSLU/xss4+43vkrecQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = DoctorReview;\nexport default DoctorReview;\nvar _c;\n$RefreshReg$(_c, \"DoctorReview\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","DoctorReview","_s","id","navigate","rating","setRating","comment","setComment","submitted","setSubmitted","doctorName","setDoctorName","fetchDoctorName","response","fetch","data","json","fullname","error","console","handleRating","value","handleSubmit","e","preventDefault","match","alert","reviewData","method","headers","body","JSON","stringify","ok","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","map","star","onClick","placeholder","onChange","target","required","type","_c","$RefreshReg$"],"sources":["C:/Users/gorke/OneDrive/Masaüstü/doctorappointmentsystem/src/pages/DoctorReview.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\nconst DoctorReview = () => {\r\n    const { id } = useParams();\r\n    const navigate = useNavigate();\r\n    const [rating, setRating] = useState(0);\r\n    const [comment, setComment] = useState('');\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [doctorName, setDoctorName] = useState('');\r\n\r\n    useEffect(() => {\r\n        // Doktorun ismini çekmek için API çağrısı\r\n        const fetchDoctorName = async () => {\r\n            try {\r\n                const response = await fetch(`http://localhost:5001/api/doctors/appointment/${id}`);\r\n                const data = await response.json();\r\n                setDoctorName(data.fullname);\r\n            } catch (error) {\r\n                console.error('Error fetching doctor details:', error);\r\n            }\r\n        };\r\n        \r\n        fetchDoctorName();\r\n    }, [id]);\r\n\r\n    const handleRating = (value) => {\r\n        setRating(value);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!id.match(/^[0-9a-fA-F]{24}$/)) {\r\n            alert(\"Invalid doctor ID format.\");\r\n            return;\r\n        }\r\n    \r\n        const reviewData = {\r\n            id,\r\n            doctorName,\r\n            rating,\r\n            comment,\r\n        };\r\n    \r\n        try {\r\n            const response = await fetch('http://localhost:5001/api/reviews', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(reviewData),\r\n            });\r\n    \r\n            if (response.ok) {\r\n                setSubmitted(true);\r\n                setTimeout(() => navigate('/'), 2000);\r\n            } else {\r\n                alert('Failed to submit review. Please try again.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error submitting review:', error);\r\n            alert('An error occurred. Please try again.');\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"review-container\">\r\n            <h2>Rate Your Experience with {doctorName}</h2>\r\n            {submitted ? (\r\n                <p>Thank you for your review! Redirecting to homepage...</p>\r\n            ) : (\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"rating\">\r\n                        {[1, 2, 3, 4, 5].map((star) => (\r\n                            <span\r\n                                key={star}\r\n                                className={`star ${star <= rating ? 'filled' : ''}`}\r\n                                onClick={() => handleRating(star)}\r\n                            >\r\n                                &#9733;\r\n                            </span>\r\n                        ))}\r\n                    </div>\r\n                    <textarea\r\n                        placeholder=\"Leave a comment...\"\r\n                        value={comment}\r\n                        onChange={(e) => setComment(e.target.value)}\r\n                        required\r\n                    />\r\n                    <button type=\"submit\">Submit Review</button>\r\n                </form>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DoctorReview;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}