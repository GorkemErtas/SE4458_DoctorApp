{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gorke\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\doctorappointmentsystem\\\\src\\\\pages\\\\DoctorSearch.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/DoctorSearch.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorSearch = () => {\n  _s();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [selectedCity, setSelectedCity] = useState('');\n  const [doctorList, setDoctorList] = useState([]);\n  const countryCityMap = {\n    Turkey: ['Istanbul', 'Ankara', 'Izmir'],\n    USA: ['New York', 'Los Angeles', 'Chicago'],\n    UK: ['London', 'Manchester', 'Birmingham'],\n    Germany: ['Berlin', 'Munich', 'Hamburg']\n  };\n  const handleSearch = async () => {\n    // Eğer tüm filtreler boşsa formu sıfırla ve uyarı göster\n    if (!searchQuery && !selectedCountry && !selectedCity) {\n      alert('Please enter a search term or select a filter.');\n      setSearchQuery('');\n      setSelectedCountry('');\n      setSelectedCity('');\n      setDoctorList([]);\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:5001/api/doctors/search?query=${searchQuery}&country=${selectedCountry}&city=${selectedCity}`);\n      const results = await response.json();\n      setDoctorList(results);\n    } catch (error) {\n      console.error('Error searching doctors:', error);\n      alert('Failed to search doctors. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"doctor-search-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"search-title\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Specialization, area of interest, or name\",\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value),\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCountry,\n        onChange: e => setSelectedCountry(e.target.value),\n        className: \"dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), Object.keys(countryCityMap).map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: country,\n          children: country\n        }, country, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCity,\n        onChange: e => setSelectedCity(e.target.value),\n        className: \"dropdown\",\n        disabled: !selectedCountry,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), selectedCountry && countryCityMap[selectedCountry].map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: city,\n          children: city\n        }, city, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        className: \"search-button\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"doctor-list\",\n      children: doctorList.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No doctors found matching your criteria.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this) : doctorList.map(doctor => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"doctor-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: doctor.fullname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 32\n          }, this), \" (\", doctor.area_of_interest, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [doctor.city, \", \", doctor.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 29\n        }, this)]\n      }, doctor.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(DoctorSearch, \"ju+r70q9a8l9HTD6DZE741Zm63o=\");\n_c = DoctorSearch;\nexport default DoctorSearch;\nvar _c;\n$RefreshReg$(_c, \"DoctorSearch\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DoctorSearch","_s","searchQuery","setSearchQuery","selectedCountry","setSelectedCountry","selectedCity","setSelectedCity","doctorList","setDoctorList","countryCityMap","Turkey","USA","UK","Germany","handleSearch","alert","response","fetch","results","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","Object","keys","map","country","disabled","city","onClick","length","doctor","fullname","area_of_interest","id","_c","$RefreshReg$"],"sources":["C:/Users/gorke/OneDrive/Masaüstü/doctorappointmentsystem/src/pages/DoctorSearch.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/DoctorSearch.css';\r\n\r\nconst DoctorSearch = () => {\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [selectedCountry, setSelectedCountry] = useState('');\r\n    const [selectedCity, setSelectedCity] = useState('');\r\n    const [doctorList, setDoctorList] = useState([]);\r\n\r\n    const countryCityMap = {\r\n        Turkey: ['Istanbul', 'Ankara', 'Izmir'],\r\n        USA: ['New York', 'Los Angeles', 'Chicago'],\r\n        UK: ['London', 'Manchester', 'Birmingham'],\r\n        Germany: ['Berlin', 'Munich', 'Hamburg'],\r\n    };\r\n\r\n    const handleSearch = async () => {\r\n        // Eğer tüm filtreler boşsa formu sıfırla ve uyarı göster\r\n        if (!searchQuery && !selectedCountry && !selectedCity) {\r\n            alert('Please enter a search term or select a filter.');\r\n            setSearchQuery('');\r\n            setSelectedCountry('');\r\n            setSelectedCity('');\r\n            setDoctorList([]);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(\r\n                `http://localhost:5001/api/doctors/search?query=${searchQuery}&country=${selectedCountry}&city=${selectedCity}`\r\n            );\r\n            const results = await response.json();\r\n            setDoctorList(results);\r\n        } catch (error) {\r\n            console.error('Error searching doctors:', error);\r\n            alert('Failed to search doctors. Please try again.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"doctor-search-container\">\r\n            <h1 className=\"search-title\">Search</h1>\r\n            <div className=\"search-form\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Specialization, area of interest, or name\"\r\n                    value={searchQuery}\r\n                    onChange={(e) => setSearchQuery(e.target.value)}\r\n                    className=\"search-input\"\r\n                />\r\n                <select\r\n                    value={selectedCountry}\r\n                    onChange={(e) => setSelectedCountry(e.target.value)}\r\n                    className=\"dropdown\"\r\n                >\r\n                    <option value=\"\">Select Country</option>\r\n                    {Object.keys(countryCityMap).map((country) => (\r\n                        <option key={country} value={country}>\r\n                            {country}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n                <select\r\n                    value={selectedCity}\r\n                    onChange={(e) => setSelectedCity(e.target.value)}\r\n                    className=\"dropdown\"\r\n                    disabled={!selectedCountry}\r\n                >\r\n                    <option value=\"\">Select City</option>\r\n                    {selectedCountry &&\r\n                        countryCityMap[selectedCountry].map((city) => (\r\n                            <option key={city} value={city}>\r\n                                {city}\r\n                            </option>\r\n                        ))}\r\n                </select>\r\n                <button onClick={handleSearch} className=\"search-button\">\r\n                    Search\r\n                </button>\r\n            </div>\r\n            <div className=\"doctor-list\">\r\n                {doctorList.length === 0 ? (\r\n                    <p>No doctors found matching your criteria.</p>\r\n                ) : (\r\n                    doctorList.map((doctor) => (\r\n                        <div key={doctor.id} className=\"doctor-item\">\r\n                            <p><strong>{doctor.fullname}</strong> ({doctor.area_of_interest})</p>\r\n                            <p>{doctor.city}, {doctor.country}</p>\r\n                        </div>\r\n                    ))\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DoctorSearch;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}