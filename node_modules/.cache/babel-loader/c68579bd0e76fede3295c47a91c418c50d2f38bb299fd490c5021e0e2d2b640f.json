{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gorke\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\doctorappointmentsystem\\\\src\\\\pages\\\\DoctorRegistrationForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // useNavigate import edildi\nimport '../styles/DoctorRegistrationForm.css';\nimport jwtDecode from 'jwt-decode';\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GOOGLE_CLIENT_ID = \"YOUR_GOOGLE_CLIENT_ID\";\nconst [isAuthenticated, setIsAuthenticated] = useState(false);\nconst countryCityMap = {\n  Turkey: ['Istanbul', 'Ankara', 'Izmir'],\n  USA: ['New York', 'Los Angeles', 'Chicago'],\n  UK: ['London', 'Manchester', 'Birmingham'],\n  Germany: ['Berlin', 'Munich', 'Hamburg']\n};\nconst DoctorRegistrationForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    fullname: '',\n    areaOfInterest: '',\n    availableDays: [],\n    startTime: '',\n    endTime: '',\n    address: '',\n    city: '',\n    country: ''\n  });\n  const navigate = useNavigate(); // Yönlendirme fonksiyonu\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'country') {\n      setFormData({\n        ...formData,\n        [name]: value,\n        city: ''\n      });\n    } else {\n      setFormData({\n        ...formData,\n        [name]: value\n      });\n    }\n  };\n  const handleCheckboxChange = day => {\n    const updatedDays = formData.availableDays.includes(day) ? formData.availableDays.filter(d => d !== day) : [...formData.availableDays, day];\n    setFormData({\n      ...formData,\n      availableDays: updatedDays\n    });\n  };\n  const handleGoogleSuccess = response => {\n    const decodedToken = jwtDecode(response.credential);\n    setIsAuthenticated(true);\n    setFormData({\n      ...formData,\n      email: decodedToken.email,\n      fullname: decodedToken.name\n    });\n    alert(`Google Authentication Successful! Welcome ${decodedToken.name}`);\n  };\n  const handleGoogleFailure = () => {\n    alert('Google Authentication Failed. Please try again.');\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!isAuthenticated) {\n      alert('Please authenticate with Google first.');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5001/api/doctors/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      const result = await response.json();\n      if (response.ok) {\n        alert(result.message); // Başarı mesajını göster\n        setFormData({\n          email: '',\n          fullname: '',\n          areaOfInterest: '',\n          availableDays: [],\n          startTime: '',\n          endTime: '',\n          address: '',\n          city: '',\n          country: ''\n        });\n        navigate('/'); // Ana menüye yönlendir\n      } else {\n        alert(result.error || 'Something went wrong!');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Failed to register doctor. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n    clientId: GOOGLE_CLIENT_ID,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"registration-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"registration-title\",\n        children: \"Add Me as Doctor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), !isAuthenticated ? /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        onSuccess: handleGoogleSuccess,\n        onError: handleGoogleFailure\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"auth-success\",\n        children: \"\\u2705 Authentication Successful!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"registration-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            value: formData.email,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), isAuthenticated && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"fullname\",\n              children: \"Full Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"fullname\",\n              name: \"fullname\",\n              value: formData.fullname,\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"areaOfInterest\",\n              children: \"Area of Interest:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"areaOfInterest\",\n              name: \"areaOfInterest\",\n              value: formData.areaOfInterest,\n              onChange: handleInputChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Orthopedics\",\n                children: \"Orthopedics\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Pediatrics\",\n                children: \"Pediatrics\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Cardiology\",\n                children: \"Cardiology\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Available Days:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"checkbox-group\",\n              children: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'].map(day => /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  onChange: () => handleCheckboxChange(day),\n                  checked: formData.availableDays.includes(day)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 45\n                }, this), day]\n              }, day, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Available Hours:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"time-inputs\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                name: \"startTime\",\n                value: formData.startTime,\n                onChange: handleInputChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                name: \"endTime\",\n                value: formData.endTime,\n                onChange: handleInputChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"address\",\n              children: \"Address:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"address\",\n              name: \"address\",\n              value: formData.address,\n              onChange: handleInputChange,\n              rows: \"3\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"country\",\n              children: \"Country:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"country\",\n              name: \"country\",\n              value: formData.country,\n              onChange: handleInputChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Country\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 37\n              }, this), Object.keys(countryCityMap).map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: country,\n                children: country\n              }, country, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"city\",\n              children: \"City:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"city\",\n              name: \"city\",\n              value: formData.city,\n              onChange: handleInputChange,\n              required: true,\n              disabled: !formData.country,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select City\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 37\n              }, this), formData.country && countryCityMap[formData.country].map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: city,\n                children: city\n              }, city, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 45\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"submit-button\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n_s(DoctorRegistrationForm, \"UnzadiezTbw6IJT7KagCKnhw60s=\", false, function () {\n  return [useNavigate];\n});\n_c = DoctorRegistrationForm;\nexport default DoctorRegistrationForm;\nvar _c;\n$RefreshReg$(_c, \"DoctorRegistrationForm\");","map":{"version":3,"names":["React","useState","useNavigate","jwtDecode","GoogleOAuthProvider","GoogleLogin","jsxDEV","_jsxDEV","Fragment","_Fragment","GOOGLE_CLIENT_ID","isAuthenticated","setIsAuthenticated","countryCityMap","Turkey","USA","UK","Germany","DoctorRegistrationForm","_s","formData","setFormData","email","fullname","areaOfInterest","availableDays","startTime","endTime","address","city","country","navigate","handleInputChange","e","name","value","target","handleCheckboxChange","day","updatedDays","includes","filter","d","handleGoogleSuccess","response","decodedToken","credential","alert","handleGoogleFailure","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","result","json","ok","message","error","console","clientId","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","onError","onSubmit","htmlFor","type","id","disabled","onChange","required","map","checked","rows","Object","keys","_c","$RefreshReg$"],"sources":["C:/Users/gorke/OneDrive/Masaüstü/doctorappointmentsystem/src/pages/DoctorRegistrationForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // useNavigate import edildi\r\nimport '../styles/DoctorRegistrationForm.css';\r\nimport jwtDecode from 'jwt-decode';\r\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\r\n\r\nconst GOOGLE_CLIENT_ID = \"YOUR_GOOGLE_CLIENT_ID\";\r\nconst [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\nconst countryCityMap = {\r\n    Turkey: ['Istanbul', 'Ankara', 'Izmir'],\r\n    USA: ['New York', 'Los Angeles', 'Chicago'],\r\n    UK: ['London', 'Manchester', 'Birmingham'],\r\n    Germany: ['Berlin', 'Munich', 'Hamburg'],\r\n};\r\n\r\nconst DoctorRegistrationForm = () => {\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        fullname: '',\r\n        areaOfInterest: '',\r\n        availableDays: [],\r\n        startTime: '',\r\n        endTime: '',\r\n        address: '',\r\n        city: '',\r\n        country: '',\r\n    });\r\n\r\n    const navigate = useNavigate(); // Yönlendirme fonksiyonu\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n\r\n        if (name === 'country') {\r\n            setFormData({ ...formData, [name]: value, city: '' });\r\n        } else {\r\n            setFormData({ ...formData, [name]: value });\r\n        }\r\n    };\r\n\r\n    const handleCheckboxChange = (day) => {\r\n        const updatedDays = formData.availableDays.includes(day)\r\n            ? formData.availableDays.filter((d) => d !== day)\r\n            : [...formData.availableDays, day];\r\n        setFormData({ ...formData, availableDays: updatedDays });\r\n    };\r\n\r\n    const handleGoogleSuccess = (response) => {\r\n        const decodedToken = jwtDecode(response.credential);\r\n        setIsAuthenticated(true);\r\n        setFormData({ ...formData, email: decodedToken.email, fullname: decodedToken.name });\r\n        alert(`Google Authentication Successful! Welcome ${decodedToken.name}`);\r\n    };\r\n\r\n    const handleGoogleFailure = () => {\r\n        alert('Google Authentication Failed. Please try again.');\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!isAuthenticated) {\r\n            alert('Please authenticate with Google first.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5001/api/doctors/register', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(formData),\r\n            });\r\n\r\n            const result = await response.json();\r\n\r\n            if (response.ok) {\r\n                alert(result.message); // Başarı mesajını göster\r\n                setFormData({\r\n                    email: '',\r\n                    fullname: '',\r\n                    areaOfInterest: '',\r\n                    availableDays: [],\r\n                    startTime: '',\r\n                    endTime: '',\r\n                    address: '',\r\n                    city: '',\r\n                    country: '',\r\n                });\r\n                navigate('/'); // Ana menüye yönlendir\r\n            } else {\r\n                alert(result.error || 'Something went wrong!');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            alert('Failed to register doctor. Please try again.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <GoogleOAuthProvider clientId={GOOGLE_CLIENT_ID}>\r\n            <div className=\"registration-container\">\r\n                <h1 className=\"registration-title\">Add Me as Doctor</h1>\r\n    \r\n                {!isAuthenticated ? (\r\n                    <GoogleLogin\r\n                        onSuccess={handleGoogleSuccess}\r\n                        onError={handleGoogleFailure}\r\n                    />\r\n                ) : (\r\n                    <p className=\"auth-success\">✅ Authentication Successful!</p>\r\n                )}\r\n    \r\n                <form className=\"registration-form\" onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">Email:</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            value={formData.email}\r\n                            disabled\r\n                        />\r\n                    </div>\r\n    \r\n                    {/* Diğer form elemanları yalnızca kullanıcı giriş yaptıysa görünür olacak */}\r\n                    {isAuthenticated && (\r\n                        <>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"fullname\">Full Name:</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    id=\"fullname\"\r\n                                    name=\"fullname\"\r\n                                    value={formData.fullname}\r\n                                    disabled\r\n                                />\r\n                            </div>\r\n    \r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"areaOfInterest\">Area of Interest:</label>\r\n                                <select\r\n                                    id=\"areaOfInterest\"\r\n                                    name=\"areaOfInterest\"\r\n                                    value={formData.areaOfInterest}\r\n                                    onChange={handleInputChange}\r\n                                    required\r\n                                >\r\n                                    <option value=\"\">Select</option>\r\n                                    <option value=\"Orthopedics\">Orthopedics</option>\r\n                                    <option value=\"Pediatrics\">Pediatrics</option>\r\n                                    <option value=\"Cardiology\">Cardiology</option>\r\n                                </select>\r\n                            </div>\r\n    \r\n                            <div className=\"form-group\">\r\n                                <label>Available Days:</label>\r\n                                <div className=\"checkbox-group\">\r\n                                    {['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'].map((day) => (\r\n                                        <label key={day}>\r\n                                            <input\r\n                                                type=\"checkbox\"\r\n                                                onChange={() => handleCheckboxChange(day)}\r\n                                                checked={formData.availableDays.includes(day)}\r\n                                            />\r\n                                            {day}\r\n                                        </label>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n    \r\n                            <div className=\"form-group\">\r\n                                <label>Available Hours:</label>\r\n                                <div className=\"time-inputs\">\r\n                                    <input\r\n                                        type=\"time\"\r\n                                        name=\"startTime\"\r\n                                        value={formData.startTime}\r\n                                        onChange={handleInputChange}\r\n                                        required\r\n                                    />\r\n                                    <input\r\n                                        type=\"time\"\r\n                                        name=\"endTime\"\r\n                                        value={formData.endTime}\r\n                                        onChange={handleInputChange}\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n    \r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"address\">Address:</label>\r\n                                <textarea\r\n                                    id=\"address\"\r\n                                    name=\"address\"\r\n                                    value={formData.address}\r\n                                    onChange={handleInputChange}\r\n                                    rows=\"3\"\r\n                                    required\r\n                                />\r\n                            </div>\r\n    \r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"country\">Country:</label>\r\n                                <select\r\n                                    id=\"country\"\r\n                                    name=\"country\"\r\n                                    value={formData.country}\r\n                                    onChange={handleInputChange}\r\n                                    required\r\n                                >\r\n                                    <option value=\"\">Select Country</option>\r\n                                    {Object.keys(countryCityMap).map((country) => (\r\n                                        <option key={country} value={country}>\r\n                                            {country}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n    \r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"city\">City:</label>\r\n                                <select\r\n                                    id=\"city\"\r\n                                    name=\"city\"\r\n                                    value={formData.city}\r\n                                    onChange={handleInputChange}\r\n                                    required\r\n                                    disabled={!formData.country}\r\n                                >\r\n                                    <option value=\"\">Select City</option>\r\n                                    {formData.country &&\r\n                                        countryCityMap[formData.country].map((city) => (\r\n                                            <option key={city} value={city}>\r\n                                                {city}\r\n                                            </option>\r\n                                        ))}\r\n                                </select>\r\n                            </div>\r\n    \r\n                            <button type=\"submit\" className=\"submit-button\">Register</button>\r\n                        </>\r\n                    )}\r\n                </form>\r\n            </div>\r\n        </GoogleOAuthProvider>\r\n    );}\r\n\r\nexport default DoctorRegistrationForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}